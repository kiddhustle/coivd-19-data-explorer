{"ast":null,"code":"var _jsxFileName = \"/Users/boss/workspace/covid-19-explorer/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr'; // import Plotly from 'plotly.js-dist'\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(`https://pomber.github.io/covid19/timeseries.json`, fetcher, {\n    onError: (err, key, config) => {\n      console.log('err', err);\n      console.log('key', key);\n      console.log('config', config);\n    },\n    initialData: {}\n  });\n  console.log('error', data);\n  console.log('data', data);\n  const countryNames = Object.keys(data);\n\n  const getCountryData = countrySeries => {\n    if (!countrySeries) {\n      return {};\n    }\n\n    const out = {\n      date: null,\n      confirmed: 0,\n      recovered: 0,\n      deaths: 0\n    };\n    countrySeries.forEach((val, i, arr) => {\n      out.date = val.date;\n      out.confirmed += val.confirmed;\n      out.recovered += val.confirmed;\n      out.deaths += val.deaths;\n    });\n    return out;\n  }; // const map = data ? ()\n\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Home page\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Country\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Date\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Confirmed\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Deaths\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Recovered\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Suffering\")), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, countryNames.map(name => {\n    const country = getCountryData(data[name]);\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, name), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, country.date), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, country.confirmed), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, country.deaths), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, country.recovered), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, country.confirmed - (country.deaths + country.recovered)));\n  }))));\n}","map":{"version":3,"sources":["/Users/boss/workspace/covid-19-explorer/pages/index.js"],"names":["Layout","useRouter","useSWR","fetcher","url","fetch","then","r","json","Index","query","data","error","onError","err","key","config","console","log","initialData","countryNames","Object","keys","getCountryData","countrySeries","out","date","confirmed","recovered","deaths","forEach","val","i","arr","map","name","country"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\n// import Plotly from 'plotly.js-dist'\n\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json());\n}\n\n\nexport default function Index() {\n    const { query } = useRouter();\n    const { data, error } = useSWR(\n        `https://pomber.github.io/covid19/timeseries.json`,\n        fetcher,\n        {\n            onError: (err, key, config) => {\n                console.log('err', err)\n                console.log('key', key)\n                console.log('config', config)\n                \n            },\n            initialData: {}\n        }\n    );\n    console.log('error', data)\n    console.log('data', data)\n    \n    const countryNames = Object.keys(data)\n    const getCountryData = (countrySeries) => {\n\n        if (!countrySeries) {\n            return {}\n        }\n        const out = {\n            date: null, \n            confirmed: 0,\n            recovered: 0,\n            deaths: 0\n        }\n\n        countrySeries.forEach((val, i, arr) =>{\n            out.date = val.date\n            out.confirmed += val.confirmed\n            out.recovered += val.confirmed\n            out.deaths += val.deaths\n        })\n\n        return out;\n    }\n\n    // const map = data ? ()\n    return (\n        <Layout>\n            <p>Home page</p>\n            <table>\n                <thead>\n                    <th>Country</th>\n                    <th>Date</th>\n                    <th>Confirmed</th>\n                    <th>Deaths</th>\n                    <th>Recovered</th>\n                    <th>Suffering</th>\n                </thead>\n                <tbody>\n                    {countryNames.map((name) => {\n                        const country = getCountryData(data[name])\n                        return (<tr>\n                            <td>{name}</td>\n                            <td>{country.date}</td>\n                            <td>{country.confirmed}</td>\n                            <td>{country.deaths}</td>\n                            <td>{country.recovered}</td>\n                            <td>{country.confirmed - (country.deaths + country.recovered)}</td>\n                        </tr>\n                    )\n                })\n            }\n                    \n                </tbody>\n            </table>\n            \n        </Layout>\n    );\n}"]},"metadata":{},"sourceType":"module"}