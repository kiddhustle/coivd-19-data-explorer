{"ast":null,"code":"var _jsxFileName = \"/Users/boss/workspace/covid-19-explorer/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useSWR = useSWR(\"https://pomber.github.io/covid19/timeseries.json\", fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  console.log('error', data);\n  console.log('data', data);\n  fetch(\"https://pomber.github.io/covid19/timeseries.json\").then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    data[\"Argentina\"].forEach(function (_ref) {\n      var date = _ref.date,\n          confirmed = _ref.confirmed,\n          recovered = _ref.recovered,\n          deaths = _ref.deaths;\n      return console.log(\"\".concat(date, \" active cases: \").concat(confirmed - recovered - deaths));\n    });\n  });\n  var countryNames = Object.keys(data);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Home page\"), countryNames.map(function (name) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }\n    }, name);\n  }));\n}","map":{"version":3,"sources":["/Users/boss/workspace/covid-19-explorer/pages/index.js"],"names":["Layout","useRouter","useSWR","fetcher","url","fetch","then","r","json","Index","query","data","error","console","log","response","forEach","date","confirmed","recovered","deaths","countryNames","Object","keys","map","name"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAGA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACH;;AAGD,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,mBACVR,SAAS,EADC;AAAA,MACpBS,KADoB,cACpBA,KADoB;;AAAA,gBAEJR,MAAM,qDAE1BC,OAF0B,CAFF;AAAA,MAEpBQ,IAFoB,WAEpBA,IAFoB;AAAA,MAEdC,KAFc,WAEdA,KAFc;;AAM5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,IAArB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AAEAN,EAAAA,KAAK,CAAC,kDAAD,CAAL,CACKC,IADL,CACU,UAAAS,QAAQ;AAAA,WAAIA,QAAQ,CAACP,IAAT,EAAJ;AAAA,GADlB,EAEKF,IAFL,CAEU,UAAAK,IAAI,EAAI;AACVA,IAAAA,IAAI,CAAC,WAAD,CAAJ,CAAkBK,OAAlB,CAA0B;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,UAASC,SAAT,QAASA,SAAT;AAAA,UAAoBC,SAApB,QAAoBA,SAApB;AAAA,UAA+BC,MAA/B,QAA+BA,MAA/B;AAAA,aACtBP,OAAO,CAACC,GAAR,WAAeG,IAAf,4BAAqCC,SAAS,GAAGC,SAAZ,GAAwBC,MAA7D,EADsB;AAAA,KAA1B;AAGH,GANL;AAOA,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYZ,IAAZ,CAArB;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEHU,YAAY,CAACG,GAAb,CAAiB,UAACC,IAAD;AAAA,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CAAX;AAAA,GAAjB,CAFG,CADJ;AAMH","sourcesContent":["import Layout from '../components/MyLayout';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\n\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json());\n}\n\n\nexport default function Index() {\n    const { query } = useRouter();\n    const { data, error } = useSWR(\n        `https://pomber.github.io/covid19/timeseries.json`,\n        fetcher\n    );\n    console.log('error', data)\n    console.log('data', data)\n\n    fetch(\"https://pomber.github.io/covid19/timeseries.json\")\n        .then(response => response.json())\n        .then(data => {\n            data[\"Argentina\"].forEach(({ date, confirmed, recovered, deaths }) =>\n                console.log(`${date} active cases: ${confirmed - recovered - deaths}`)\n            );\n        });\n    const countryNames = Object.keys(data)\n\n    return (\n        <Layout>\n            <p>Home page</p>\n    {countryNames.map((name) => (<p>{name}</p>))}\n        </Layout>\n    );\n}"]},"metadata":{},"sourceType":"module"}