{"ast":null,"code":"export var getCountryData = function getCountryData(countrySeries) {\n  if (!countrySeries) {\n    return {};\n  }\n\n  var out = {\n    date: null,\n    confirmed: 0,\n    recovered: 0,\n    deaths: 0,\n    suffering: 0,\n    mortalityrate: 0\n  };\n  countrySeries.forEach(function (val, i, arr) {\n    out.date = val.date;\n    out.confirmed += parseInt(val.confirmed);\n    out.recovered += parseInt(val.recovered);\n    out.deaths += parseInt(val.deaths);\n  });\n  out.suffering = out.confirmed - (out.deaths + out.recovered);\n  out.mortalityrate = out.deaths / out.confirmed;\n  return out;\n};\nexport var getAggregateData = function getAggregateData(countryData) {\n  if (countryData == undefined) {\n    return {};\n  }\n\n  var out = {};\n  Object.keys(countryData).forEach(function (name) {\n    out[name] = getCountryData(countryData[name]);\n  });\n  return out;\n};\nexport default {\n  getCountryData: getCountryData,\n  getAggregateData: getAggregateData\n};","map":{"version":3,"sources":["/Users/boss/workspace/covid-19-explorer/utils/country.js"],"names":["getCountryData","countrySeries","out","date","confirmed","recovered","deaths","suffering","mortalityrate","forEach","val","i","arr","parseInt","getAggregateData","countryData","undefined","Object","keys","name"],"mappings":"AAAA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,aAAD,EAAmB;AAE7C,MAAI,CAACA,aAAL,EAAoB;AAChB,WAAO,EAAP;AACH;;AACD,MAAMC,GAAG,GAAG;AACRC,IAAAA,IAAI,EAAE,IADE;AAERC,IAAAA,SAAS,EAAE,CAFH;AAGRC,IAAAA,SAAS,EAAE,CAHH;AAIRC,IAAAA,MAAM,EAAE,CAJA;AAKRC,IAAAA,SAAS,EAAE,CALH;AAMRC,IAAAA,aAAa,EAAE;AANP,GAAZ;AASAP,EAAAA,aAAa,CAACQ,OAAd,CAAsB,UAACC,GAAD,EAAMC,CAAN,EAASC,GAAT,EAAiB;AACnCV,IAAAA,GAAG,CAACC,IAAJ,GAAWO,GAAG,CAACP,IAAf;AACAD,IAAAA,GAAG,CAACE,SAAJ,IAAiBS,QAAQ,CAACH,GAAG,CAACN,SAAL,CAAzB;AACAF,IAAAA,GAAG,CAACG,SAAJ,IAAiBQ,QAAQ,CAACH,GAAG,CAACL,SAAL,CAAzB;AACAH,IAAAA,GAAG,CAACI,MAAJ,IAAcO,QAAQ,CAACH,GAAG,CAACJ,MAAL,CAAtB;AACH,GALD;AAOAJ,EAAAA,GAAG,CAACK,SAAJ,GAAgBL,GAAG,CAACE,SAAJ,IAAiBF,GAAG,CAACI,MAAJ,GAAaJ,GAAG,CAACG,SAAlC,CAAhB;AACAH,EAAAA,GAAG,CAACM,aAAJ,GAAoBN,GAAG,CAACI,MAAJ,GAAaJ,GAAG,CAACE,SAArC;AAEA,SAAOF,GAAP;AACH,CAzBM;AA2BP,OAAO,IAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAiB;AAC7C,MAAIA,WAAW,IAAIC,SAAnB,EAA8B;AAAE,WAAO,EAAP;AAAW;;AAC3C,MAAMd,GAAG,GAAG,EAAZ;AACAe,EAAAA,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBN,OAAzB,CAAiC,UAACU,IAAD,EAAU;AACvCjB,IAAAA,GAAG,CAACiB,IAAD,CAAH,GAAYnB,cAAc,CAACe,WAAW,CAACI,IAAD,CAAZ,CAA1B;AACH,GAFD;AAGA,SAAOjB,GAAP;AACH,CAPM;AASP,eAAe;AACXF,EAAAA,cAAc,EAAdA,cADW;AAEXc,EAAAA,gBAAgB,EAAhBA;AAFW,CAAf","sourcesContent":["export const getCountryData = (countrySeries) => {\n\n    if (!countrySeries) {\n        return {}\n    }\n    const out = {\n        date: null,\n        confirmed: 0,\n        recovered: 0,\n        deaths: 0,\n        suffering: 0,\n        mortalityrate: 0\n    }\n\n    countrySeries.forEach((val, i, arr) => {\n        out.date = val.date\n        out.confirmed += parseInt(val.confirmed)\n        out.recovered += parseInt(val.recovered)\n        out.deaths += parseInt(val.deaths)\n    })\n\n    out.suffering = out.confirmed - (out.deaths + out.recovered)\n    out.mortalityrate = out.deaths / out.confirmed\n\n    return out;\n}\n\nexport const getAggregateData = (countryData) => {\n    if (countryData == undefined) { return {} }\n    const out = {}\n    Object.keys(countryData).forEach((name) => {\n        out[name] = getCountryData(countryData[name])\n    })\n    return out\n}\n\nexport default {\n    getCountryData,\n    getAggregateData\n}"]},"metadata":{},"sourceType":"module"}