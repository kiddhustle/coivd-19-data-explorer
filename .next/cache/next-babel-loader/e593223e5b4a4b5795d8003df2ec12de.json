{"ast":null,"code":"var _jsxFileName = \"/Users/boss/workspace/covid-19-explorer/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport { getAggregateData, getCountryData } from '../utils/country'; // import Plotly from 'plotly.js-dist'\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  var _this = this;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useSWR = useSWR(\"https://pomber.github.io/covid19/timeseries.json\", fetcher, {\n    onError: function onError(err, key, config) {\n      console.log('err', err);\n      console.log('key', key);\n      console.log('config', config);\n    },\n    initialData: {}\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  console.log('error', data);\n  console.log('data', data);\n  var countryNames = Object.keys(data);\n  var aggregateData = getAggregateData(data);\n  console.log('aggregateData', aggregateData); // const map = data ? ()\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Home page\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Country\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Date\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Confirmed\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Deaths\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Recovered\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Suffering\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Mortality Rate\")), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, countryNames.map(function (name) {\n    var country = getCountryData(data[name]);\n    return __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, __jsx(\"td\", {\n      title: \"country\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, name), __jsx(\"td\", {\n      title: \"date\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, country.date), __jsx(\"td\", {\n      title: \"confirmed\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, country.confirmed), __jsx(\"td\", {\n      title: \"deaths\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, country.deaths), __jsx(\"td\", {\n      title: \"recovered\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, country.recovered), __jsx(\"td\", {\n      title: \"sufferers (approx)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, country.suffering), __jsx(\"td\", {\n      title: \"mortality rate\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, (country.mortalityrate * 100).toFixed(2), \"%\"));\n  }))));\n}","map":{"version":3,"sources":["/Users/boss/workspace/covid-19-explorer/pages/index.js"],"names":["Layout","useRouter","useSWR","getAggregateData","getCountryData","fetcher","url","fetch","then","r","json","Index","query","onError","err","key","config","console","log","initialData","data","error","countryNames","Object","keys","aggregateData","map","name","country","date","confirmed","deaths","recovered","suffering","mortalityrate","toFixed"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport {getAggregateData, getCountryData} from '../utils/country'\n\n// import Plotly from 'plotly.js-dist'\n\n\nfunction fetcher(url) {\n    return fetch(url).then(r => r.json());\n}\n\n\nexport default function Index() {\n    const { query } = useRouter();\n    const { data, error } = useSWR(\n        `https://pomber.github.io/covid19/timeseries.json`,\n        fetcher,\n        {\n            onError: (err, key, config) => {\n                console.log('err', err)\n                console.log('key', key)\n                console.log('config', config)\n                \n            },\n            initialData: {}\n        }\n    );\n    console.log('error', data)\n    console.log('data', data)\n    \n    const countryNames = Object.keys(data)\n    \n\n    const aggregateData = getAggregateData(data)\n    console.log('aggregateData', aggregateData)\n    // const map = data ? ()\n    return (\n        <Layout>\n            <p>Home page</p>\n            <table>\n                <thead>\n                    <th>Country</th>\n                    <th>Date</th>\n                    <th>Confirmed</th>\n                    <th>Deaths</th>\n                    <th>Recovered</th>\n                    <th>Suffering</th>\n                    <th>Mortality Rate</th>\n                </thead>\n                <tbody>\n                    {countryNames.map((name) => {\n                        const country = getCountryData(data[name])\n                        return (<tr>\n                            <td title=\"country\">{name}</td>\n                            <td title=\"date\">{country.date}</td>\n                            <td title=\"confirmed\">{country.confirmed}</td>\n                            <td title=\"deaths\">{country.deaths}</td>\n                            <td title=\"recovered\">{country.recovered}</td>\n                            <td title=\"sufferers (approx)\">{country.suffering}</td>\n                            <td title=\"mortality rate\">{(country.mortalityrate * 100).toFixed(2)}%</td>\n                        </tr>\n                    )\n                })\n            }\n                    \n                </tbody>\n            </table>\n            \n        </Layout>\n    );\n}"]},"metadata":{},"sourceType":"module"}