{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/boss/workspace/covid-19-explorer/pages/countries/[countryName].js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport NoSSR from 'react-no-ssr';\nimport { Bar, BarChart, Legend, LineChart, Line, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport Layout from '../../components/MyLayout';\nimport { fetcher } from '../index';\nexport default (function () {\n  var router = useRouter();\n  var countryName = router.query.countryName;\n\n  var _useState = useState([]),\n      countryDataset = _useState[0],\n      setCountryDataset = _useState[1];\n\n  var _useSWR = useSWR(\"https://pomber.github.io/covid19/timeseries.json\", fetcher, {\n    onError: function onError(err, key, config) {\n      console.log('err', err);\n      console.log('key', key);\n      console.log('config', config);\n    },\n    onSuccess: function onSuccess(data, key, config) {\n      var newData = [];\n      var dataset = data[countryName];\n      newData = (_readOnlyError(\"newData\"), addExtraSeriesData(dataset, countryName));\n      setDataset(newData);\n    },\n    initialData: {}\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, router.query.countryName), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(NoSSR, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, __jsx(LineChart, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  })))));\n}); // export async function getStaticPaths() {\n//     // Return a list of possible value for id\n// }\n// export async function getStaticProps({ params }) {\n//     // Fetch necessary data for the blog post using params.id\n// }","map":{"version":3,"sources":["/Users/boss/workspace/covid-19-explorer/pages/countries/[countryName].js"],"names":["React","useState","useEffect","useRouter","NoSSR","Bar","BarChart","Legend","LineChart","Line","ResponsiveContainer","Tooltip","XAxis","YAxis","Layout","fetcher","router","countryName","query","countryDataset","setCountryDataset","useSWR","onError","err","key","config","console","log","onSuccess","data","newData","dataset","addExtraSeriesData","setDataset","initialData","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,MAAxB,EAAgCC,SAAhC,EAA2CC,IAA3C,EAAiDC,mBAAjD,EAAsEC,OAAtE,EAA+EC,KAA/E,EAAsFC,KAAtF,QAAmG,UAAnG;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,SAAQC,OAAR,QAAsB,UAAtB;AAEA,gBAAe,YAAM;AACjB,MAAMC,MAAM,GAAGb,SAAS,EAAxB;AADiB,MAEVc,WAFU,GAEKD,MAAM,CAACE,KAFZ,CAEVD,WAFU;;AAAA,kBAG2BhB,QAAQ,CAAC,EAAD,CAHnC;AAAA,MAGVkB,cAHU;AAAA,MAGMC,iBAHN;;AAAA,gBAIOC,MAAM,qDAE1BN,OAF0B,EAG1B;AACIO,IAAAA,OAAO,EAAE,iBAACC,GAAD,EAAMC,GAAN,EAAWC,MAAX,EAAsB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,GAAnB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AAEH,KANL;AAOIG,IAAAA,SAAS,EAAE,mBAACC,IAAD,EAAOL,GAAP,EAAYC,MAAZ,EAAuB;AAC9B,UAAMK,OAAO,GAAG,EAAhB;AACA,UAAMC,OAAO,GAAGF,IAAI,CAACZ,WAAD,CAApB;AACAa,MAAAA,OAAO,+BAAGE,kBAAkB,CAACD,OAAD,EAAUd,WAAV,CAArB,CAAP;AAEAgB,MAAAA,UAAU,CAACH,OAAD,CAAV;AACH,KAbL;AAcII,IAAAA,WAAW,EAAE;AAdjB,GAH0B,CAJb;AAAA,MAITL,IAJS,WAITA,IAJS;AAAA,MAIHM,KAJG,WAIHA,KAJG;;AAwBjB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKnB,MAAM,CAACE,KAAP,CAAaD,WAAlB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CAFJ,CADJ;AAYH,CApCD,E,CAsCA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport NoSSR from 'react-no-ssr';\nimport { Bar, BarChart, Legend, LineChart, Line, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport Layout from '../../components/MyLayout'\n\nimport {fetcher} from '../index'\n\nexport default () => {\n    const router = useRouter();\n    const {countryName} = router.query\n    const [countryDataset, setCountryDataset] = useState([])\n    const { data, error } = useSWR(\n        `https://pomber.github.io/covid19/timeseries.json`,\n        fetcher,\n        {\n            onError: (err, key, config) => {\n                console.log('err', err)\n                console.log('key', key)\n                console.log('config', config)\n\n            },\n            onSuccess: (data, key, config) => {\n                const newData = []\n                const dataset = data[countryName]\n                newData = addExtraSeriesData(dataset, countryName)\n\n                setDataset(newData)\n            },\n            initialData: {}\n        }\n    );\n    return (\n        <Layout>\n            <h1>{router.query.countryName}</h1>\n            <div>\n                <NoSSR>\n                    <ResponsiveContainer width=\"100%\" height={400}>\n                        <LineChart></LineChart>\n                    </ResponsiveContainer>\n                </NoSSR>\n            </div>\n        </Layout>\n    );\n};\n\n// export async function getStaticPaths() {\n//     // Return a list of possible value for id\n// }\n\n// export async function getStaticProps({ params }) {\n//     // Fetch necessary data for the blog post using params.id\n// }\n"]},"metadata":{},"sourceType":"module"}